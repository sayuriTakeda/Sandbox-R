source("/home/casaevideo/minhas_funcoes.R")
library(lubridate)
library(magrittr)
library(RODBC)
library(dplyr)
library(glue)
library(readxl)
library(DT)
library(janitor)
library(ggplot2)
library(plotly)
# se chamar o data.table não pode chamar o lubridate
#(ou tem que especificar por conta do label = T)

## parametros do codigo
q1 <- 0.3
q3 <- 0.75
vetor <- c("2016-32","2016-33","2016-34","2016-35")
vetor2 <- c("2017-31","2017-32","2017-33","2017-34")

base_fluxo$DAT_OPERACAO <- substring(base_fluxo$DAT_OPERACAO,1,10) # para tirar hora depois de data

base_fluxo %<>%
  mutate(DIAS_SEM = wday(dmy(base_fluxo$DAT_OPERACAO)),
         DIAS = lubridate::wday(DIAS_SEM, label = TRUE),
         SEM = week(dmy(base_fluxo$DAT_OPERACAO)),
         MES = month(base_fluxo$DAT_OPERACAO),
         MES2 = lubridate::month(base_fluxo$DAT_OPERACAO, label = TRUE),
         ANO = substr(base_fluxo$DAT_OPERACAO,7,10))

base_fluxo <- left_join(base_fluxo, abertura_loja, by = "COD_FILIAL")

base_fluxo <- base_fluxo[-16]

# se tiver NA na Hora.Ab. ou Hora.Fech. tem que tirar a linha toda
base_fluxo <- na.omit(base_fluxo) # tem NA (filial 238 e 226 não existem mais)

base_fluxo %<>% mutate(
  validacao_horario = ifelse(HOR_PROCESSAMENTO >= Hora.Ab. & HOR_PROCESSAMENTO <= Hora.Fech., 1, 0)
)

#quartil no final 

tipo_de_loja <- tipo_de_loja_base
tipo_de_loja <- select(tipo_de_loja,COD_FILIAL, X.1)
tipo_de_loja <- tipo_de_loja[-1:-3,]
tipo_de_loja <- as.data.frame(tipo_de_loja)
tipo_de_loja$COD_FILIAL <- as.character(tipo_de_loja$COD_FILIAL)
tipo_de_loja$COD_FILIAL <- as.integer(tipo_de_loja$COD_FILIAL)

base_fluxo <- left_join(base_fluxo, tipo_de_loja, by = "COD_FILIAL")

base_fluxo %<>% mutate(
  ATINGIMENTO = base_fluxo$QTD_CUPOM_ATUAL / base_fluxo$QTD_CLIENTE_ATUAL
)

# não é para omitir e sim para botar vazio ou 0
# filter(base_fluxo, base_fluxo$ATINGIMENTO == "Inf")
# filter(base_fluxo, base_fluxo$ATINGIMENTO == "NaN")

base_fluxo[base_fluxo == "Inf"] <- 0
base_fluxo[base_fluxo == "NaN"] <- 0

tipo_de_loja <- tipo_de_loja_base
tipo_de_loja <- select(tipo_de_loja,COD_FILIAL, X.2)
tipo_de_loja <- tipo_de_loja[-1:-3,]
tipo_de_loja <- as.data.frame(tipo_de_loja)
tipo_de_loja$COD_FILIAL <- as.character(tipo_de_loja$COD_FILIAL)
tipo_de_loja$COD_FILIAL <- as.integer(tipo_de_loja$COD_FILIAL)

base_fluxo <- left_join(base_fluxo, tipo_de_loja, by = "COD_FILIAL")

base_fluxo %<>% mutate(ANO_SEMANA_COD = paste0(base_fluxo$ANO_SEM,"/", base_fluxo$COD_FILIAL))

Quant_dias_aproveitamento <- base_fluxo %>% select(ANO_SEM,COD_FILIAL,ANO_SEMANA_COD,DAT_OPERACAO)

Quant_dias_aproveitamento <- base_fluxo %>% 
  distinct(ANO_SEMANA_COD, DAT_OPERACAO) %>% 
  count(ANO_SEMANA_COD)

base_fluxo <- left_join(base_fluxo,Quant_dias_aproveitamento, by = "ANO_SEMANA_COD")

base_fluxo <- rename(base_fluxo, Quantidade_de_Dias = n, Tipo_de_Loja = X.1, Abre_domingo = X.2)

base_fluxo %<>% mutate(Validacao_Dia = paste0(Quantidade_de_Dias,"-",Abre_domingo))

# se estiver entre o quartil 1 e 3 insere 1, caso contrário 0  
base_fluxo %<>% mutate(
  quartil = ifelse(ATINGIMENTO >= round(quantile(base_fluxo$ATINGIMENTO,q1),2) & 
                     ATINGIMENTO <= round(quantile(base_fluxo$ATINGIMENTO,q3),2), 1, 0)
)

########### TD-LOJA ###########
tab_1 <- base_fluxo %>% 
  filter(PCT_ATUAL == 100, 
         validacao_horario == 1, 
         quartil == 1, 
         Validacao_Dia %in% c("6-Não","7-Sim"), 
         ANO == 2016, 
         ANO_SEM %in% vetor)

tab_1 %<>% 
  group_by(COD_FILIAL, NOM_FILIAL) %>%  
  summarise(QTD_CLIENTE_ATUAL = sum(QTD_CLIENTE_ATUAL), 
            QTD_CUPOM_ATUAL = sum(QTD_CUPOM_ATUAL), 
            HOR_PROCESSAMENTO = n())

tab_1$QTD_CUPOM_ATUAL <- as.numeric(tab_1$QTD_CUPOM_ATUAL)
tab_1$QTD_CLIENTE_ATUAL <- as.numeric(tab_1$QTD_CLIENTE_ATUAL)
tab_1$HOR_PROCESSAMENTO <- as.numeric(tab_1$HOR_PROCESSAMENTO)
tab_1 <- as.data.frame(tab_1)
tab_1 %<>% mutate("Cupons/Hora" = tab_1$QTD_CUPOM_ATUAL / tab_1$HOR_PROCESSAMENTO, 
                  Conversao = tab_1$QTD_CUPOM_ATUAL / tab_1$QTD_CLIENTE_ATUAL)
tab_1[tab_1 == "Inf"] <- 0
tab_1[tab_1 == "NaN"] <- 0

#__________

tab_2 <- base_fluxo %>% 
  filter(PCT_ATUAL == 100,
         validacao_horario == 1,
         quartil == 1,
         Validacao_Dia %in% c("6-Não","7-Sim"),
         ANO == 2017,
         ANO_SEM %in% vetor2)

tab_2 %<>% 
  group_by(COD_FILIAL,NOM_FILIAL) %>% 
  summarise(QTD_CLIENTE_ATUAL = sum(QTD_CLIENTE_ATUAL), 
            QTD_CUPOM_ATUAL = sum(QTD_CUPOM_ATUAL), 
            HOR_PROCESSAMENTO = n())

tab_2$QTD_CLIENTE_ATUAL <- as.numeric(tab_2$QTD_CLIENTE_ATUAL)
tab_2$QTD_CUPOM_ATUAL <- as.numeric(tab_2$QTD_CUPOM_ATUAL)
tab_2$HOR_PROCESSAMENTO <- as.numeric(tab_2$HOR_PROCESSAMENTO)
tab_2 <- as.data.frame(tab_2)
tab_2 %<>% mutate("Cupons/Hora" = tab_2$QTD_CUPOM_ATUAL/tab_2$HOR_PROCESSAMENTO, 
                  "Conversao" = QTD_CUPOM_ATUAL / QTD_CLIENTE_ATUAL)
tab_2[tab_2 == "Inf"] <- 0
tab_2[tab_2 == "NaN"] <- 0

#__________

tab_3 <- base_fluxo %>% 
  filter(validacao_horario == 1,
         Validacao_Dia %in% c("6-Não","7-Sim"),
         ANO == 2016,
         ANO_SEM %in% vetor)

tab_3 %<>% 
  group_by(COD_FILIAL,NOM_FILIAL) %>% 
  summarise(QTD_CLIENTE_ATUAL = sum(QTD_CLIENTE_ATUAL), 
            QTD_CUPOM_ATUAL = sum(QTD_CUPOM_ATUAL), 
            HOR_PROCESSAMENTO = n())

tab_3$QTD_CLIENTE_ATUAL <- as.numeric(tab_3$QTD_CLIENTE_ATUAL)
tab_3$QTD_CUPOM_ATUAL <- as.numeric(tab_3$QTD_CUPOM_ATUAL)
tab_3$HOR_PROCESSAMENTO <- as.numeric(tab_3$HOR_PROCESSAMENTO)
tab_3 <- as.data.frame(tab_3)
tab_3 %<>% mutate("Cupons/Hora" = tab_3$QTD_CUPOM_ATUAL/tab_3$HOR_PROCESSAMENTO, 
                  "Conversao" = QTD_CUPOM_ATUAL / QTD_CLIENTE_ATUAL)
tab_3[tab_3 == "Inf"] <- 0
tab_3[tab_3 == "NaN"] <- 0

#__________

tab_4 <- base_fluxo %>% 
  filter(validacao_horario == 1,
         Validacao_Dia %in% c("6-Não","7-Sim"),
         ANO == 2017,
         ANO_SEM %in% vetor2)

tab_4 %<>% 
  group_by(COD_FILIAL,NOM_FILIAL) %>% 
  summarise(QTD_CLIENTE_ATUAL = sum(QTD_CLIENTE_ATUAL), 
            QTD_CUPOM_ATUAL = sum(QTD_CUPOM_ATUAL), 
            HOR_PROCESSAMENTO = n())

tab_4$QTD_CLIENTE_ATUAL <- as.numeric(tab_4$QTD_CLIENTE_ATUAL)
tab_4$QTD_CUPOM_ATUAL <- as.numeric(tab_4$QTD_CUPOM_ATUAL)
tab_4$HOR_PROCESSAMENTO <- as.numeric(tab_4$HOR_PROCESSAMENTO)
tab_4 <- as.data.frame(tab_4)
tab_4 %<>% mutate("Cupons/Hora" = tab_4$QTD_CUPOM_ATUAL/tab_4$HOR_PROCESSAMENTO, 
                  "Conversao" = QTD_CUPOM_ATUAL / QTD_CLIENTE_ATUAL)
tab_4[tab_4 == "Inf"] <- 0
tab_4[tab_4 == "NaN"] <- 0

TOTAIS_DE_HORAS = sum(tab_3$HOR_PROCESSAMENTO) + sum(tab_4$HOR_PROCESSAMENTO)
HORAS_VALIDAS = sum(tab_1$HOR_PROCESSAMENTO) + sum(tab_2$HOR_PROCESSAMENTO)

#__________

base_cupons_real_alterado <- mutate(base_cupons_real, ano_semana = paste0(Ano,"-",Semana))
base_cupons_real_alterado %<>% group_by(ano_semana,Ano,Semana) %>% summarise(PRESENCA = sum(PRESENCA))

#__________

tab_5 <- base_fluxo %>% 
  filter(PCT_ATUAL == 100,
         validacao_horario == 1,
         quartil == 1,
         Validacao_Dia %in% c("6-Não","7-Sim"),
         ANO == 2016)

tab_5 %<>% 
  group_by(ano_semana = ANO_SEM) %>% 
  summarise(QTD_CLIENTE_ATUAL = sum(QTD_CLIENTE_ATUAL), 
            QTD_CUPOM_ATUAL = sum(QTD_CUPOM_ATUAL), 
            HOR_PROCESSAMENTO = n())

tab_5$QTD_CLIENTE_ATUAL <- as.numeric(tab_5$QTD_CLIENTE_ATUAL)
tab_5$QTD_CUPOM_ATUAL <- as.numeric(tab_5$QTD_CUPOM_ATUAL)
#tab_5$HOR_PROCESSAMENTO <- as.numeric(tab_5$HOR_PROCESSAMENTO)
tab_5 <- as.data.frame(tab_5)
tab_5 %<>% mutate("Conversao" = QTD_CUPOM_ATUAL / QTD_CLIENTE_ATUAL)
tab_5[tab_5 == "Inf"] <- 0
tab_5[tab_5 == "NaN"] <- 0
tab_5 %<>% mutate(Semana = substring(tab_5$ano_semana, 6,7)) 

tab_5 <- left_join(tab_5, 
                   ungroup(base_cupons_real_alterado) %>% select(ano_semana,PRESENCA), 
                   by = "ano_semana")
tab_5 <- tab_5[-1,] 

#__________

tab_6 <- base_fluxo %>%
  filter(PCT_ATUAL == 100,
         validacao_horario == 1,
         quartil == 1,
         Validacao_Dia %in% c("6-Não","7-Sim"),
         ANO == 2017)

tab_6 %<>%
  group_by(ano_semana = ANO_SEM) %>%
  summarise(QTD_CLIENTE_ATUAL = sum(QTD_CLIENTE_ATUAL),
            QTD_CUPOM_ATUAL = sum(QTD_CUPOM_ATUAL),
            HOR_PROCESSAMENTO = n())

tab_6$QTD_CLIENTE_ATUAL <- as.numeric(tab_6$QTD_CLIENTE_ATUAL)
tab_6$QTD_CUPOM_ATUAL <- as.numeric(tab_6$QTD_CUPOM_ATUAL)
tab_6$HOR_PROCESSAMENTO <- as.numeric(tab_6$HOR_PROCESSAMENTO)
tab_6 <- as.data.frame(tab_6)
tab_6 %<>% mutate("Cupons/Hora" = tab_6$QTD_CUPOM_ATUAL/tab_6$HOR_PROCESSAMENTO,
                  "Conversao" = QTD_CUPOM_ATUAL / QTD_CLIENTE_ATUAL)
tab_6[tab_6 == "Inf"] <- 0
tab_6[tab_6 == "NaN"] <- 0

tab_6 %<>% mutate(Semana = substring(tab_6$ano_semana, 6,7)) 

tab_6 <- left_join(tab_6, 
                   ungroup(base_cupons_real_alterado) %>% select(ano_semana,PRESENCA), 
                   by = "ano_semana")

#__________

# parte final da tab_6
a <- tab_5 %>% select(ano_semana, Conversao, PRESENCA) %>% mutate(semana = substr(ano_semana,6,7))
b <- tab_6 %>% select(ano_semana, Conversao, PRESENCA) %>%  mutate(semana = substr(ano_semana,6,7))
final_tab_6 <- left_join(a,b,by="semana")
final_tab_6 %<>%  mutate(CLIENTE_2016 = PRESENCA.x/Conversao.x, CLIENTE_2017 = PRESENCA.y/Conversao.y)
final_tab_6 <- final_tab_6[1:nrow(b)-1,]

#__________

tab_7 <- base_cupons_real %>% 
  mutate(ano_semana = paste0(Ano, "-", Semana)) %>% 
  filter(ano_semana %in% vetor)
tab_7 %<>% group_by(COD_FILIAL, NOM_FILIAL) %>% summarise(presenca = sum(PRESENCA))

#__________

tab_8 <- base_cupons_real %>% 
  mutate(ano_semana = paste0(Ano, "-", Semana)) %>% 
  filter(ano_semana %in% vetor2)
tab_8 %<>%  group_by(COD_FILIAL, NOM_FILIAL) %>% summarise(presenca = sum(PRESENCA))

#__________

# Para criar a tabela colorida na aba TD-LOJA

tipo_de_loja_base_t <- tipo_de_loja_base[-1:-3,] 

for(n in c(1,5,6,7,8,9,10)){
  tipo_de_loja_base_t[,n] <- as.integer(as.character(tipo_de_loja_base_t[,n]))
}

tipo_de_loja_base_t %<>% mutate(a = (tipo_de_loja_base_t$X.4-tipo_de_loja_base_t$X.3)*20, 
                              b = (tipo_de_loja_base_t$X.6-tipo_de_loja_base_t$X.5)*4, 
                              c = (tipo_de_loja_base_t$X.8-tipo_de_loja_base_t$X.7)*4,
                              mes_fechado = a + b + c)

abertura_loja <- left_join(abertura_loja, 
                           tipo_de_loja_base_t %>% select(COD_FILIAL, mes_fechado), 
                           by = "COD_FILIAL")
abertura_loja %<>%  mutate(semana_fechada = mes_fechado/4)


tab_colorida <- tab_2[,1:2]
tab_colorida <- left_join(tab_colorida, 
                          regiao_loja, 
                          by = "COD_FILIAL")

# fazer para P1
tab_colorida <- left_join(tab_colorida, 
                          tab_1 %>% select(COD_FILIAL, `Cupons/Hora`, horas_validas = HOR_PROCESSAMENTO, Conversao), 
                          by ="COD_FILIAL")
tab_colorida <- left_join(tab_colorida, 
                          tab_7 %>% select(COD_FILIAL, cupom = presenca), 
                          by = "COD_FILIAL")
tab_colorida %<>% mutate(cliente = cupom / Conversao)
tab_colorida <- left_join(tab_colorida, 
                          abertura_loja %>% select(COD_FILIAL, mes_fechado), 
                          by = "COD_FILIAL")
tab_colorida %<>% mutate(cliente_hora = cliente/mes_fechado) 

# fazer para P2
tab_colorida <- left_join(tab_colorida, 
                          tab_2 %>% select(COD_FILIAL, "Cupons/Hora_2" = `Cupons/Hora`, horas_validas_2 = HOR_PROCESSAMENTO, Conversao_2 = Conversao), 
                          by ="COD_FILIAL")
tab_colorida <- left_join(tab_colorida, 
                          tab_8 %>% select(COD_FILIAL, cupom_2 = presenca), 
                          by = "COD_FILIAL")
tab_colorida %<>% mutate(cliente_2 = cupom_2 / Conversao_2)
tab_colorida %<>% mutate(cliente_hora_2 = cliente_2/mes_fechado) 

tab_colorida %<>% mutate(clien_hora_var = cliente_hora_2 / cliente_hora -1, 
                         cup_hora_var = `Cupons/Hora_2` / `Cupons/Hora` -1, 
                         conv_var = (Conversao_2 - Conversao)*100) 

tab_colorida <- tab_colorida[!(is.na(tab_colorida$`Cupons/Hora`) | tab_colorida$`Cupons/Hora`==""), ] 

#__________

# tab_colorida_resumo tira o cod e loja 

tab_colorida_resumo <- tab_colorida %>%  
  select(-COD_FILIAL, -NOM_FILIAL) %>% 
  group_by(REGIAO) %>% 
  summarise_all(sum)
    
tab_colorida_resumo %<>% select(-Conversao_2, -Conversao, -clien_hora_var, -cup_hora_var, -conv_var) 

tab_colorida_resumo %<>% mutate(conv = cupom/cliente, 
                         conv_2 = cupom_2/cliente_2, 
                         cliente_hora_var = cliente_hora_2/cliente_hora-1, 
                         cupons_hora_var = `Cupons/Hora_2`/`Cupons/Hora`-1) 
tab_colorida_resumo %<>% mutate(conv_var = (conv_2 - conv)*100) 

tab_colorida_resumo %<>% select(REGIAO, cliente_hora, `Cupons/Hora`, 
                         cupom, cliente, horas_validas, 
                         conv, cliente_hora_2, `Cupons/Hora_2`, 
                         cupom_2, cliente_2, horas_validas_2, 
                         conv_2, cliente_hora_var, cupons_hora_var, 
                         conv_var)

#datatable(tab_colorida_resumo)
teste = data.frame(REGIAO = "Casa e Vídeo", 
                   cliente_hora = sum(tab_colorida_resumo$cliente_hora), 
                   `Cupons/Hora` = sum(tab_colorida_resumo$`Cupons/Hora`), 
                   cupom = sum(tab_colorida_resumo$cupom), 
                   cliente = sum(tab_colorida_resumo$cliente), 
                   horas_validas = sum(tab_colorida_resumo$horas_validas), 
                   conv = sum(tab_colorida_resumo$cupom)/sum(tab_colorida_resumo$cliente), 
                   cliente_hora_2 = sum(tab_colorida_resumo$cliente_hora_2), 
                   `Cupons/Hora_2` = sum(tab_colorida_resumo$`Cupons/Hora_2`), 
                   cupom_2 = sum(tab_colorida_resumo$cupom_2), 
                   cliente_2 = sum(tab_colorida_resumo$cliente_2), 
                   horas_validas_2 = sum(tab_colorida_resumo$horas_validas_2), 
                   conv_2 = sum(tab_colorida_resumo$cupom_2)/sum(tab_colorida_resumo$cliente_2), 
                   cliente_hora_var = sum(tab_colorida_resumo$cliente)/sum(tab_colorida_resumo$cliente_2)-1, 
                   cupons_hora_var = sum(tab_colorida_resumo$cupons_hora_var), 
                   conv_var = (sum(tab_colorida_resumo$conv) - sum(tab_colorida_resumo$conv_2))*100)

# cliente_hora_var = sum(tab_colorida_resumo$cliente_hora)/sum(tab_colorida_resumo$cliente_hora_2)-1, 
# cupons_hora_var = sum(tab_colorida_resumo$`Cupons/Hora`)/sum(tab_colorida_resumo$`Cupons/Hora_2`)-1, 
# conv_var = (sum(tab_colorida_resumo$conv) - sum(tab_colorida_resumo$conv_2))*100

teste <- teste %>%  clean_names()
tab_colorida_resumo <- tab_colorida_resumo %>% clean_names()
#names(tab_colorida_resumo)
tab_colorida_resumo <- rbind(tab_colorida_resumo, teste)

tab_colorida_resumo[,2:16] %<>% round(2)

tab_col_1 <- datatable(tab_colorida_resumo[,1:7], options = list(
  initComplete = JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
    "}")
))
tab_col_2 <- datatable(tab_colorida_resumo[,8:13], options = list(
  initComplete = JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
    "}")
))
tab_col_3 <- datatable(tab_colorida_resumo[,14:16], options = list(
  initComplete = JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
    "}")
))

#__________

# Ranking

tab_colorida %<>% select(COD_FILIAL,NOM_FILIAL,REGIAO,
                         cliente,cliente_hora,horas_validas,
                         Conversao,cliente_2,cliente_hora_2,
                         horas_validas_2,Conversao_2,clien_hora_var,
                         conv_var) 
tab_colorida[,4:13] %<>% round(2)

datatable(tab_colorida)

#__________

# Dashboard 

tab_1_dash <- tab_colorida_resumo %>% select(regiao, cliente, cliente_2, cliente_hora_var)
tab_2_dash <- tab_colorida_resumo %>% select(regiao, conv, conv_2, conv_var)

#TOTAIS_DE_HORAS (foi criado antes)
#HORAS_VALIDAS (foi criado antes)

horas_descartadas = TOTAIS_DE_HORAS - HORAS_VALIDAS

horas_descartadas_perc = 1-(HORAS_VALIDAS / TOTAIS_DE_HORAS)
horas_validas_perc = HORAS_VALIDAS / TOTAIS_DE_HORAS

# Criação do dataframe
tab_dash_resumo = data.frame(valor = horas_descartadas_perc, nomes = "Descartadas")
tab_dash_resumo <- rbind(tab_dash_resumo, data.frame(valor = horas_validas_perc, nomes = "Validas"))
# Criação do gráfico
g <- ggplot(tab_dash_resumo, aes(tab_dash_resumo$nomes, tab_dash_resumo$valor))
g + geom_col(fill = "#b3d9ff") +  
    labs(x = "Horas",y = "%")


# Criação do dataframe
fluxo_cia_presenca = data.frame(valor = presença_de_cupom_p1, nomes = "P1")
fluxo_cia_presenca <- rbind(fluxo_cia_presenca, data.frame(valor = presença_de_cupom_p2, nomes = "P2"))
fluxo_cia_presenca %<>% mutate(quant = fluxo_cia_presenca$CuponsTT/sum(fluxo_cia_presenca$CuponsTT)) 
fluxo_cia_presenca$quant %<>% round(2) 
# Criação do gráfico
g <- ggplot(fluxo_cia_presenca, aes(fluxo_cia_presenca$nomes, fluxo_cia_presenca$quant))
g + geom_col(aes(fill = fluxo_cia_presenca$quant)) +  
  labs(x = "Período",y = "%") + 
  geom_text(aes(label = quant, y = quant + 0.10)) +
  labs(title = "Cupons Casa e Vídeo") + 
  theme(plot.title = element_text(hjust = 0.5), panel.background = element_blank()) + 
  scale_fill_gradient(low = "#538cc6", high = "#204060", guide = F)
  

# Criação do dataframe
fluxo_cia = data.frame(valor = (presença_de_cupom_p1 / tab_colorida_resumo$conv[nrow(tab_colorida_resumo)]), 
                       nomes = "P1") 
fluxo_cia %<>% rbind(data.frame(valor = (presença_de_cupom_p2 / tab_colorida_resumo$conv_2[nrow(tab_colorida_resumo)]),
                                nomes = "P2"))
fluxo_cia %<>% mutate(quant = fluxo_cia$CuponsTT/sum(fluxo_cia$CuponsTT)) 
fluxo_cia$quant %<>% round(2) 
# Criação do gráfico
g <- ggplot(fluxo_cia, aes(fluxo_cia$nomes, fluxo_cia$quant))
g + geom_col(aes(fill = fluxo_cia$quant)) +  
  labs(x = "Período",y = "%") + 
  geom_text(aes(label = quant, y = quant + 0.10)) +
  labs(title = "Fluxo Estimado Casa e Vídeo") + 
  theme(plot.title = element_text(hjust = 0.5), panel.background = element_blank()) + 
  scale_fill_gradient(low = "#538cc6", high = "#204060", guide = F)


# Criação do dataframe
fluxo_tab = data.frame(valor = (tab_1_dash$cliente[nrow(tab_1_dash)]), 
                       nomes = "P1") 
fluxo_tab %<>% rbind(data.frame(valor = (tab_1_dash$cliente_2[nrow(tab_1_dash)]),
                                nomes = "P2"))
fluxo_tab %<>% mutate(quant = fluxo_tab$valor/sum(fluxo_tab$valor)) 
fluxo_tab$quant %<>% round(2) 
# Criação do gráfico
g <- ggplot(fluxo_tab, aes(fluxo_tab$nomes, fluxo_tab$quant))
g + geom_col(aes(fill = fluxo_tab$quant)) +  
  labs(x = "Período",y = "%") + 
  geom_text(aes(label = quant, y = quant + 0.10)) +
  labs(title = "Fluxo Lojas Observadas") + 
  theme(plot.title = element_text(hjust = 0.5)) + 
  theme(panel.background = element_blank()) + 
  scale_fill_gradient(low = "#538cc6", high = "#204060", guide = F)


# Criação do dataframe
fluxo_tab_2 = data.frame(valor = (tab_2_dash$conv[nrow(tab_2_dash)]), 
                       nomes = "P1") 
fluxo_tab_2 %<>% rbind(data.frame(valor = (tab_2_dash$conv_2[nrow(tab_2_dash)]),
                                nomes = "P2"))
# Criação do gráfico
g <- ggplot(fluxo_tab_2, aes(fluxo_tab_2$nomes, fluxo_tab_2$valor))
g + geom_col(aes(fill = fluxo_tab_2$valor)) +  
  labs(x = "Período",y = "%") + 
  geom_text(aes(label = valor, y = valor + 0.05)) +
  labs(title = "Conversão Lojas Observadas") + 
  theme(plot.title = element_text(hjust = 0.5), panel.background = element_blank()) + 
  scale_fill_gradient(low = "#538cc6", high = "#204060", guide = F)
